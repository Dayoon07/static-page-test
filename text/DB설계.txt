-- 크리에이터
CREATE TABLE WHYNOT_CREATOR(
    creator_id NUMBER GENERATED ALWAYS AS IDENTITY(START WITH 1 INCREMENT BY 1 NOCACHE) PRIMARY KEY,
    creator_name VARCHAR2(100) NOT NULL,
    creator_email VARCHAR2(255) NOT NULL,
    creator_password VARCHAR2(255) NOT NULL,
    create_at VARCHAR2(50) NOT NULL,
    bio CLOB DEFAULT '',
    tel VARCHAR2(15) NOT NULL,
    profile_img VARCHAR2(100),
    profile_img_path CLOB,
    subscribe NUMBER DEFAULT 0
);
-- 영상
CREATE TABLE WHYNOT_VIDEOS(
    video_id NUMBER GENERATED ALWAYS AS IDENTITY(START WITH 1 INCREMENT BY 1 NOCACHE) PRIMARY KEY,
    creator VARCHAR2(100) NOT NULL, -- 크리에이터의 이름
    creator_val NUMBER NOT NULL, -- 크리에이터의 pk값
    title VARCHAR2(255 CHAR) NOT NULL,
    more CLOB,
    datetime VARCHAR2(50) NOT NULL,
    views NUMBER DEFAULT 0,
    likes NUMBER DEFAULT 0,
    unlikes NUMBER DEFAULT 0,
    comment_count NUMBER DEFAULT 0 
);
-- 영상의 썸네일
CREATE TABLE WHYNOT_V_IMG(
    img_id NUMBER GENERATED ALWAYS AS IDENTITY(START WITH 1 INCREMENT BY 1 NOCACHE) PRIMARY KEY,
    video_num NUMBER NOT NULL, -- videos 테이블의 pk값
    filename VARCHAR2(150) NOT NULL, -- 파일 이름
    filepath VARCHAR2(150 CHAR) NOT NULL, -- 파일 경로
    create_at VARCHAR2(50) NOT NULL
);
-- 영상의 댓글
CREATE TABLE WHYNOT_COMMENT(
    comment_id NUMBER GENERATED ALWAYS AS IDENTITY(START WITH 1 INCREMENT BY 1 NOCACHE) PRIMARY KEY,
    comment_video NUMBER NOT NULL, -- 댓들을 단 영상의 pk
    commenter VARCHAR2(100) NOT NULL, -- 댓글을 단 사용자의 이름
    comment_userid NUMBER NOT NULL, -- 댓글을 단 사용자의 pk
    comment_content VARCHAR2(900 CHAR) NOT NULL,
    datetime VARCHAR2(50) NOT NULL
);
-- 구독 관리 테이블
CREATE TABLE WHYNOT_SUBSCRIPTIONS(
    subscription_id NUMBER GENERATED ALWAYS AS IDENTITY(START WITH 1 INCREMENT BY 1 NOCACHE) PRIMARY KEY,
    subscriber_id NUMBER NOT NULL, -- 구독자 ID (WHYNOT_CREATOR.creator_id와 참조)
    creator_id NUMBER NOT NULL,   -- 크리에이터 ID (WHYNOT_CREATOR.creator_id와 참조)
    subscribed_at VARCHAR2(50) NOT NULL -- 구독 시작 날짜
    /* CONSTRAINT fk_subscriber FOREIGN KEY (subscriber_id) REFERENCES WHYNOT_CREATOR (creator_id) ON DELETE CASCADE,
    CONSTRAINT fk_creator FOREIGN KEY (creator_id) REFERENCES WHYNOT_CREATOR (creator_id) ON DELETE CASCADE,
    CONSTRAINT unique_subscription UNIQUE (subscriber_id, creator_id) -- 중복 구독 방지 */
);

SELECT * FROM WHYNOT_CREATOR;
SELECT * FROM WHYNOT_VIDEOS;
SELECT * FROM WHYNOT_V_IMG;
SELECT * FROM WHYNOT_COMMENT;
SELECT * FROM WHYNOT_SUBSCRIPTIONS;

--DROP TABLE WHYNOT_CREATOR;
--DROP TABLE WHYNOT_VIDEOS;
--DROP TABLE WHYNOT_V_IMG;
--DROP TABLE WHYNOT_COMMENT;
--DROP TABLE WHYNOT_SUBSCRIPTIONS;

desc whynot_creator;

COMMIT;
