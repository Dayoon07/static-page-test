-- 장르 테이블
CREATE TABLE MOVIE_GENRES (
    genre_id NUMBER GENERATED ALWAYS AS IDENTITY(START WITH 1 INCREMENT BY 1 NOCACHE) PRIMARY KEY, -- 장르 고유 ID
    genre_name VARCHAR2(50) NOT NULL -- 장르 이름 (예: 액션, 로맨스 등)
);

-- 등급 테이블
CREATE TABLE MOVIE_RATINGS (
    rating_id NUMBER GENERATED ALWAYS AS IDENTITY(START WITH 1 INCREMENT BY 1 NOCACHE) PRIMARY KEY, -- 평점 고유 ID
    rating_name VARCHAR2(50) NOT NULL, -- 평점 이름 (예: G, PG, R)
    description VARCHAR2(255) -- 평점 설명
);

-- 관람 연령 테이블
CREATE TABLE MOVIE_AGE_RATINGS (
    age_rating_id NUMBER GENERATED ALWAYS AS IDENTITY(START WITH 1 INCREMENT BY 1 NOCACHE) PRIMARY KEY, -- 관람 연령 고유 ID
    age_rating_name VARCHAR2(50) NOT NULL, -- 관람 연령 이름 (예: 전체 관람가, 15세 이상)
    description VARCHAR2(255) -- 관람 연령 설명
);

-- 사용자 테이블
CREATE TABLE MOVIE_USERS (
    user_id NUMBER GENERATED ALWAYS AS IDENTITY(START WITH 1 INCREMENT BY 1 NOCACHE) PRIMARY KEY, -- 사용자 고유 ID
    phone VARCHAR2(20) UNIQUE NOT NULL, -- 전화번호 (중복 불가)
    name VARCHAR2(100) NOT NULL, -- 사용자 이름
    email VARCHAR2(255) NOT NULL, -- 사용자 이메일
    password VARCHAR2(255) NOT NULL,
    create_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP -- 가입 일시
);

SELECT * FROM MOVIE_USERS;
SELECT USER_ID, PHONE, NAME, EMAIL, TO_CHAR(CREATE_AT, 'YYYY-MM-DD HH24:MI:SS') FROM MOVIE_USERS;

INSERT INTO MOVIE_USERS(phone, name, email) VALUES('010-8466-8317', '강다윤', 'dayoon071022@gmail.com');

-- 인물 테이블
CREATE TABLE MOVIE_PEOPLE (
    person_id NUMBER GENERATED ALWAYS AS IDENTITY(START WITH 1 INCREMENT BY 1 NOCACHE) PRIMARY KEY, -- 인물 고유 ID
    name VARCHAR2(100) NOT NULL, -- 이름
    birth TIMESTAMP DEFAULT CURRENT_TIMESTAMP, -- 생년월일
    nationality VARCHAR2(50), -- 국적
    profile_image_url VARCHAR2(255), -- 프로필 이미지 URL
    bio CLOB -- 인물 설명 (자기소개 등)
);

-- 영화 테이블
CREATE TABLE MOVIE_MOVIES (
    movie_id NUMBER GENERATED ALWAYS AS IDENTITY(START WITH 1 INCREMENT BY 1 NOCACHE) PRIMARY KEY, -- 영화 고유 ID
    title VARCHAR2(255) NOT NULL, -- 영화 제목
    release_date TIMESTAMP, -- 개봉일
    poster_image_url VARCHAR2(255), -- 포스터 이미지 URL
    rating_id NUMBER, -- 평점 ID (MOVIE_RATINGS 참조)
    genre_id NUMBER, -- 장르 ID (MOVIE_GENRES 참조)
    age_rating_id NUMBER, -- 관람 연령 ID (MOVIE_AGE_RATINGS 참조)
    status VARCHAR2(20) DEFAULT 'COMING_SOON', -- 상영 상태
    created_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP, -- 생성일
    updated_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP, -- 수정일
    CONSTRAINT fk_movie_rating FOREIGN KEY (rating_id) REFERENCES MOVIE_RATINGS(rating_id),
    CONSTRAINT fk_movie_genre FOREIGN KEY (genre_id) REFERENCES MOVIE_GENRES(genre_id),
    CONSTRAINT fk_movie_age_rating FOREIGN KEY (age_rating_id) REFERENCES MOVIE_AGE_RATINGS(age_rating_id)
);

-- 영화 상세정보 테이블
CREATE TABLE MOVIE_MOVIE_DETAILS (
    movie_id NUMBER PRIMARY KEY, -- 영화 ID (MOVIE_MOVIES와 1:1 관계)
    synopsis CLOB, -- 줄거리
    duration NUMBER, -- 상영 시간 (분)
    language VARCHAR2(50), -- 언어
    country VARCHAR2(100), -- 제작 국가
    release_type VARCHAR2(50), -- 개봉 유형 (예: 극장, OTT 등)
    CONSTRAINT fk_details_movie FOREIGN KEY (movie_id) REFERENCES MOVIE_MOVIES(movie_id)
);

-- 출연진 테이블
CREATE TABLE MOVIE_CAST (
    cast_id NUMBER GENERATED ALWAYS AS IDENTITY(START WITH 1 INCREMENT BY 1 NOCACHE) PRIMARY KEY, -- 출연진 고유 ID
    movie_id NUMBER NOT NULL, -- 영화 ID (MOVIE_MOVIES 참조)
    person_id NUMBER NOT NULL, -- 인물 ID (MOVIE_PEOPLE 참조)
    role VARCHAR2(50), -- 역할 (예: 주연, 조연, 감독 등)
    CONSTRAINT fk_cast_movie FOREIGN KEY (movie_id) REFERENCES MOVIE_MOVIES(movie_id),
    CONSTRAINT fk_cast_person FOREIGN KEY (person_id) REFERENCES MOVIE_PEOPLE(person_id)
);

-- 상영관 테이블
CREATE TABLE MOVIE_THEATERS (
    theater_id NUMBER GENERATED ALWAYS AS IDENTITY(START WITH 1 INCREMENT BY 1 NOCACHE) PRIMARY KEY, -- 상영관 고유 ID
    theater_name VARCHAR2(100) NOT NULL, -- 상영관 이름
    total_seats NUMBER NOT NULL, -- 총 좌석 수
    theater_type VARCHAR2(50) -- 상영관 유형 (예: 일반, IMAX 등)
);

-- 좌석 테이블
CREATE TABLE MOVIE_SEATS (
    seat_id NUMBER GENERATED ALWAYS AS IDENTITY(START WITH 1 INCREMENT BY 1 NOCACHE) PRIMARY KEY, -- 좌석 고유 ID
    theater_id NUMBER NOT NULL, -- 상영관 ID (MOVIE_THEATERS 참조)
    row_name VARCHAR2(5) NOT NULL, -- 행 이름 (예: A, B 등)
    seat_number NUMBER NOT NULL, -- 열 번호
    seat_type VARCHAR2(20) DEFAULT 'STANDARD', -- 좌석 유형 (예: 일반, VIP)
    status VARCHAR2(20) DEFAULT 'AVAILABLE', -- 좌석 상태 (예: 예약 가능, 점검 중)
    CONSTRAINT fk_seat_theater FOREIGN KEY (theater_id) REFERENCES MOVIE_THEATERS(theater_id),
    CONSTRAINT uk_seat UNIQUE (theater_id, row_name, seat_number)
);

-- 상영 시간표 테이블
CREATE TABLE MOVIE_SHOWTIMES (
    showtime_id NUMBER GENERATED ALWAYS AS IDENTITY(START WITH 1 INCREMENT BY 1 NOCACHE) PRIMARY KEY, -- 상영 시간표 고유 ID
    movie_id NUMBER NOT NULL, -- 영화 ID (MOVIE_MOVIES 참조)
    theater_id NUMBER NOT NULL, -- 상영관 ID (MOVIE_THEATERS 참조)
    show_date TIMESTAMP NOT NULL, -- 상영 날짜
    start_time TIMESTAMP NOT NULL, -- 상영 시작 시간
    end_time TIMESTAMP, -- 상영 종료 시간
    available_seats NUMBER, -- 잔여 좌석 수
    price NUMBER NOT NULL, -- 티켓 가격
    status VARCHAR2(20) DEFAULT 'AVAILABLE', -- 상영 상태
    CONSTRAINT fk_showtime_movie FOREIGN KEY (movie_id) REFERENCES MOVIE_MOVIES(movie_id),
    CONSTRAINT fk_showtime_theater FOREIGN KEY (theater_id) REFERENCES MOVIE_THEATERS(theater_id)
);

-- 예매 테이블
CREATE TABLE MOVIE_RESERVATIONS (
    reservation_id NUMBER GENERATED ALWAYS AS IDENTITY(START WITH 1 INCREMENT BY 1 NOCACHE) PRIMARY KEY, -- 예매 고유 ID
    user_id NUMBER, -- 사용자 ID (MOVIE_USERS 참조)
    showtime_id NUMBER NOT NULL, -- 상영 시간표 ID (MOVIE_SHOWTIMES 참조)
    reservation_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP, -- 예매 일시
    total_amount NUMBER NOT NULL, -- 총 결제 금액
    reservation_status VARCHAR2(20) DEFAULT 'CONFIRMED', -- 예매 상태
    reservation_code VARCHAR2(20) UNIQUE, -- 예매 코드 (중복 불가)
    CONSTRAINT fk_reservation_user FOREIGN KEY (user_id) REFERENCES MOVIE_USERS(user_id),
    CONSTRAINT fk_reservation_showtime FOREIGN KEY (showtime_id) REFERENCES MOVIE_SHOWTIMES(showtime_id)
);

-- 예매된 좌석 테이블
CREATE TABLE MOVIE_RESERVED_SEATS (
    reserved_seat_id NUMBER GENERATED ALWAYS AS IDENTITY(START WITH 1 INCREMENT BY 1 NOCACHE) PRIMARY KEY, -- 예매 좌석 고유 ID
    reservation_id NUMBER NOT NULL, -- 예매 ID (MOVIE_RESERVATIONS 참조)
    seat_id NUMBER NOT NULL, -- 좌석 ID (MOVIE_SEATS 참조)
    showtime_id NUMBER NOT NULL, -- 상영 시간표 ID (MOVIE_SHOWTIMES 참조)
    CONSTRAINT fk_reserved_reservation FOREIGN KEY (reservation_id) REFERENCES MOVIE_RESERVATIONS(reservation_id),
    CONSTRAINT fk_reserved_seat FOREIGN KEY (seat_id) REFERENCES MOVIE_SEATS(seat_id),
    CONSTRAINT fk_reserved_showtime FOREIGN KEY (showtime_id) REFERENCES MOVIE_SHOWTIMES(showtime_id),
    CONSTRAINT uk_reserved_seat UNIQUE (seat_id, showtime_id)
);

-- 결제 수단 테이블
CREATE TABLE MOVIE_PAYMENT_METHODS (
    payment_method_id NUMBER GENERATED ALWAYS AS IDENTITY(START WITH 1 INCREMENT BY 1 NOCACHE) PRIMARY KEY, -- 결제 수단 고유 ID
    method_name VARCHAR2(100) NOT NULL, -- 결제 수단 이름 (예: 신용카드, 계좌이체)
    is_active VARCHAR2(10) DEFAULT 'Y' -- 사용 여부 (Y/N)
);

-- 결제 테이블
CREATE TABLE MOVIE_PAYMENTS (
    payment_id NUMBER GENERATED ALWAYS AS IDENTITY(START WITH 1 INCREMENT BY 1 NOCACHE) PRIMARY KEY, -- 결제 고유 ID
    user_id NUMBER, -- 사용자 ID (MOVIE_USERS 참조)
    movie_id NUMBER, -- 영화 ID (MOVIE_MOVIES 참조)
    reservation_id NUMBER, -- 예매 ID (MOVIE_RESERVATIONS 참조)
    payment_method_id NUMBER, -- 결제 수단 ID (MOVIE_PAYMENT_METHODS 참조)
    payment_date TIMESTAMP, -- 결제 일시
    amount NUMBER, -- 결제 금액
    payment_status VARCHAR2(50), -- 결제 상태
    transaction_id VARCHAR2(100), -- 거래 번호
    CONSTRAINT fk_payment_user FOREIGN KEY (user_id) REFERENCES MOVIE_USERS(user_id),
    CONSTRAINT fk_payment_movie FOREIGN KEY (movie_id) REFERENCES MOVIE_MOVIES(movie_id),
    CONSTRAINT fk_payment_reservation FOREIGN KEY (reservation_id) REFERENCES MOVIE_RESERVATIONS(reservation_id),
    CONSTRAINT fk_payment_method FOREIGN KEY (payment_method_id) REFERENCES MOVIE_PAYMENT_METHODS(payment_method_id)
);

--SELECT * FROM DBA_TABLES WHERE TABLE_NAME LIKE '%MOVIE%';
--SELECT * FROM (SELECT TABLE_NAME FROM DBA_TABLES WHERE TABLE_NAME LIKE 'MOVIE_%');

INSERT INTO MOVIE_GENRES (genre_name) VALUES ('액션');
INSERT INTO MOVIE_GENRES (genre_name) VALUES ('로맨스');
INSERT INTO MOVIE_GENRES (genre_name) VALUES ('코미디');
INSERT INTO MOVIE_GENRES (genre_name) VALUES ('공포');

INSERT INTO MOVIE_RATINGS (rating_name, description) VALUES ('G', '전체 관람가');
INSERT INTO MOVIE_RATINGS (rating_name, description) VALUES ('PG', '부모 지도하 관람 권장');
INSERT INTO MOVIE_RATINGS (rating_name, description) VALUES ('R', '17세 미만 관람 불가');

INSERT INTO MOVIE_AGE_RATINGS (age_rating_name, description) VALUES ('전체 관람가', '모든 연령 관람 가능');
INSERT INTO MOVIE_AGE_RATINGS (age_rating_name, description) VALUES ('12세 이상', '12세 이상 관람 가능');
INSERT INTO MOVIE_AGE_RATINGS (age_rating_name, description) VALUES ('15세 이상', '15세 이상 관람 가능');
INSERT INTO MOVIE_AGE_RATINGS (age_rating_name, description) VALUES ('청소년 관람불가', '청소년은 관람할 수 없음');

INSERT INTO MOVIE_PAYMENT_METHODS (method_name, is_active) VALUES ('신용카드', 'Y');
INSERT INTO MOVIE_PAYMENT_METHODS (method_name, is_active) VALUES ('체크카드', 'Y');
INSERT INTO MOVIE_PAYMENT_METHODS (method_name, is_active) VALUES ('계좌이체', 'Y');
INSERT INTO MOVIE_PAYMENT_METHODS (method_name, is_active) VALUES ('카카오페이', 'X');
INSERT INTO MOVIE_PAYMENT_METHODS (method_name, is_active) VALUES ('네이버페이', 'X');

SELECT * FROM MOVIE_GENRES;
SELECT * FROM MOVIE_RATINGS;
SELECT * FROM MOVIE_AGE_RATINGS;
SELECT * FROM MOVIE_USERS;
SELECT * FROM MOVIE_PEOPLE;
SELECT * FROM MOVIE_MOVIES;
SELECT * FROM MOVIE_MOVIE_DETAILS;
SELECT * FROM MOVIE_CAST;
SELECT * FROM MOVIE_THEATERS;
SELECT * FROM MOVIE_SEATS;
SELECT * FROM MOVIE_SHOWTIMES;
SELECT * FROM MOVIE_RESERVATIONS;
SELECT * FROM MOVIE_RESERVED_SEATS;
SELECT * FROM MOVIE_PAYMENT_METHODS;
SELECT * FROM MOVIE_PAYMENTS;

DROP TABLE MOVIE_RESERVED_SEATS CASCADE CONSTRAINTS;
DROP TABLE MOVIE_RESERVATIONS CASCADE CONSTRAINTS;
DROP TABLE MOVIE_PAYMENTS CASCADE CONSTRAINTS;
DROP TABLE MOVIE_PAYMENT_METHODS CASCADE CONSTRAINTS;
DROP TABLE MOVIE_SHOWTIMES CASCADE CONSTRAINTS;
DROP TABLE MOVIE_SEATS CASCADE CONSTRAINTS;
DROP TABLE MOVIE_THEATERS CASCADE CONSTRAINTS;
DROP TABLE MOVIE_CAST CASCADE CONSTRAINTS;
DROP TABLE MOVIE_MOVIE_DETAILS CASCADE CONSTRAINTS;
DROP TABLE MOVIE_MOVIES CASCADE CONSTRAINTS;
DROP TABLE MOVIE_PEOPLE CASCADE CONSTRAINTS;
DROP TABLE MOVIE_USERS CASCADE CONSTRAINTS;
DROP TABLE MOVIE_AGE_RATINGS CASCADE CONSTRAINTS;
DROP TABLE MOVIE_RATINGS CASCADE CONSTRAINTS;
DROP TABLE MOVIE_GENRES CASCADE CONSTRAINTS;
