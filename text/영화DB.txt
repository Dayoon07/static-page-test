-- 사용자 테이블
CREATE TABLE MOVIE_USERS (
    user_id NUMBER GENERATED ALWAYS AS IDENTITY(START WITH 1 INCREMENT BY 1 NOCACHE) PRIMARY KEY, -- 사용자 고유 ID (자동 증가)
    phone VARCHAR2(20) UNIQUE NOT NULL,           -- 사용자 휴대폰 번호 (고유, 로그인 및 연락용)
    name VARCHAR2(100) NOT NULL,                  -- 사용자 이름
    email VARCHAR2(255) NOT NULL,                 -- 사용자 이메일 주소
    password VARCHAR2(255) NOT NULL,              -- 사용자 비밀번호 (암호화 저장 권장)
    create_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP -- 계정 생성 시각 (기본값 현재 시각)
);

-- 영화 테이블 (장르, 평점, 관람연령을 컬럼으로 통합)
CREATE TABLE MOVIE_MOVIES (
    movie_id NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY, -- 영화 ID
    title VARCHAR2(255) NOT NULL,         -- 영화 제목
    poster_image_url VARCHAR2(255),       -- 포스터 이미지
    genre VARCHAR2(50),                   -- 장르
    duration NUMBER,                       -- 상영 시간(분)
    rating_age VARCHAR2(100)              -- 관람 연령 (예: '전체관람가', '12세 이상', '15세 이상', '청소년 관람불가')
);

-- 상영관 테이블 (좌석 정보 통합)
CREATE TABLE MOVIE_CINEMAS (
    cinema_id NUMBER GENERATED ALWAYS AS IDENTITY(START WITH 1 INCREMENT BY 1 NOCACHE) PRIMARY KEY, -- 상영관 고유 ID (자동 증가)
    cinema_name VARCHAR2(100) NOT NULL,        -- 상영관 이름
    total_seats NUMBER NOT NULL,                 -- 총 좌석 수
    cinema_type VARCHAR2(50),                   -- 상영관 유형 (예: 일반, IMAX, 4DX 등)
    seat_layout CLOB                             -- 좌석 배치 정보 (예: "A1-A20, B1-B20, C1-C20, ..."; JSON 또는 문자열)
);

-- 상영 시간표 테이블
CREATE TABLE MOVIE_SHOWTIMES (
    showtime_id NUMBER GENERATED ALWAYS AS IDENTITY(START WITH 1 INCREMENT BY 1 NOCACHE) PRIMARY KEY, -- 상영 시간표 고유 ID (자동 증가)
    movie_id NUMBER NOT NULL,                    -- 상영 영화 ID (외래키)
    cinema_id NUMBER NOT NULL,                  -- 상영관 ID (외래키)
    show_date DATE NOT NULL,                      -- 상영 날짜 (년-월-일)
    start_time DATE NOT NULL,                     -- 상영 시작 시각 (날짜+시간)
    end_time DATE,                                -- 상영 종료 시각 (날짜+시간)
    available_seats NUMBER,                       -- 남은 좌석 수
    price NUMBER NOT NULL,                        -- 티켓 가격
    status VARCHAR2(20) DEFAULT 'AVAILABLE',      -- 상영 상태 (예: AVAILABLE, SOLD_OUT, CANCELLED 등)
    CONSTRAINT fk_showtime_movie FOREIGN KEY (movie_id) REFERENCES MOVIE_MOVIES(movie_id),
    CONSTRAINT fk_showtime_cinema FOREIGN KEY (cinema_id) REFERENCES MOVIE_CINEMAS(cinema_id)
);

-- 예매 테이블 (결제 정보 통합)
CREATE TABLE MOVIE_RESERVATIONS (
    reservation_id NUMBER GENERATED ALWAYS AS IDENTITY(START WITH 1 INCREMENT BY 1 NOCACHE) PRIMARY KEY, -- 예매 고유 ID (자동 증가)
    user_id NUMBER,                              -- 예매한 사용자 ID (외래키)
    showtime_id NUMBER NOT NULL,                 -- 예매된 상영 시간표 ID (외래키)
    reservation_movie_poster_url CLOB,           -- 예매한 영화의 포스터 URL (예매한 티켓 출력할 때 조인 안 할려고)
    reservation_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP, -- 예매한 시각
    total_amount NUMBER NOT NULL,                 -- 결제 총액
    reservation_status VARCHAR2(20) DEFAULT 'CONFIRMED',  -- 예매 상태 (예: CONFIRMED, CANCELLED)
    reservation_code VARCHAR2(20) UNIQUE,         -- 예매 코드 (고유)
    reserved_seats VARCHAR2(500),                  -- 예매된 좌석 번호 목록 (예: "A1,A2,B3")
    payment_method VARCHAR2(50),                   -- 결제 수단 (예: 신용카드, 체크카드, 계좌이체 등)
    payment_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP, -- 결제 완료 시각
    CONSTRAINT fk_reservation_user FOREIGN KEY (user_id) REFERENCES MOVIE_USERS(user_id),
    CONSTRAINT fk_reservation_showtime FOREIGN KEY (showtime_id) REFERENCES MOVIE_SHOWTIMES(showtime_id)
);

SAVEPOINT M6;

-- 영화 더미 데이터
INSERT INTO MOVIE_MOVIES (title, poster_image_url, genre, duration) VALUES ('기생충', 'https://image.tmdb.org/t/p/w500/7IiTTgloJzvGI1TAYymCfbfl3vT.jpg', '드라마', 132);
INSERT INTO MOVIE_MOVIES (title, poster_image_url, genre, duration) VALUES ('벌새', 'https://upload.wikimedia.org/wikipedia/ko/c/c8/%EB%B2%8C%EC%83%88_%ED%8F%AC%EC%8A%A4%ED%84%B0.jpg', '드라마', 138);
INSERT INTO MOVIE_MOVIES (title, poster_image_url, genre, duration) VALUES ('극한직업', 'https://web-cf-image.cjenm.com/crop/660x950/public/share/metamng/programs/extremejob-movie-poster-ko-001-01.jpg_1645638949085.jpg?v=1679468009', '코미디', 111);
INSERT INTO MOVIE_MOVIES (title, poster_image_url, genre, duration) VALUES ('부산행', 'https://i.namu.wiki/i/8lfVxCkzXgnK5_xfX8RnT8L_a1IlcFHeshO2corroAW49TAtljTkXqBztCV6Fbmm2bUmgFtLNmLcAV0B9reVBA.webp', '액션', 118);
INSERT INTO MOVIE_MOVIES (title, poster_image_url, genre, duration) VALUES ('아가씨', 'https://i.namu.wiki/i/ReWOyx652-CFKDqrYZXA4BxhHLkstYtEl-lu9HloYOmN9WJA4K1FxOdcvH-yYgaMAEKDYVkjbHkwks5W7KaDOw.webp', '드라마', 145);
INSERT INTO MOVIE_MOVIES (title, poster_image_url, genre, duration) VALUES ('올드보이', 'https://upload.wikimedia.org/wikipedia/ko/b/b5/%EC%98%AC%EB%93%9C%EB%B3%B4%EC%9D%B4_%ED%8F%AC%EC%8A%A4%ED%84%B0.jpg', '스릴러', 120);
INSERT INTO MOVIE_MOVIES (title, poster_image_url, genre, duration) VALUES ('엑시트', 'https://theviewers.co.kr/Files/30/Images/201906/37340_33635_1750.jpg', '액션', 103);
INSERT INTO MOVIE_MOVIES (title, poster_image_url, genre, duration) VALUES ('베테랑', 'https://i.namu.wiki/i/YHFxNLmOCJsLZ9vWDEjFGW90LgxsMXvcNXgxpOVo9jJrheXMXkhRPahBwCRshqhng2NBfJDOEOfGC29Ypz-YkA.webp', '액션', 123);
INSERT INTO MOVIE_MOVIES (title, poster_image_url, genre, duration) VALUES ('하이파이브', 'https://i.namu.wiki/i/PPiVbtDFxLl4h9g_wJYdNJmiNA2owiz4WjEQlBYBWfr-9Wia_eFycSgqfbMDwQDWjfOQ_fsv1T-F0DGDw-7Rag.webp', '드라마', 119);
INSERT INTO MOVIE_MOVIES (title, poster_image_url, genre, duration) VALUES ('범죄와의 전쟁', 'https://i.namu.wiki/i/ws6yJDqL_JxkiomsfeRGft690tM-QH_tB2CJCEgoXi6t9X0BdjMC94aIAJk48SPPYZHj7uxeYVp83pZfSFdYCw.webp', '범죄', 133);

-- 상영관 더미 데이터
INSERT INTO MOVIE_CINEMAS (cinema_name, total_seats, cinema_type, seat_layout) VALUES ('1관', 180, '일반', 'A1-A15,B1-B15,C1-C15,D1-D15,E1-E15,F1-F15,G1-G15,H1-H15,I1-I15,J1-J15,K1-K15,L1-L15');
INSERT INTO MOVIE_CINEMAS (cinema_name, total_seats, cinema_type, seat_layout) VALUES ('2관', 150, '일반', 'A1-A15,B1-B15,C1-C15,D1-D15,E1-E15,F1-F15,G1-G15,H1-H15,I1-I15,J1-J15');
INSERT INTO MOVIE_CINEMAS (cinema_name, total_seats, cinema_type, seat_layout) VALUES ('3관', 120, 'VIP', 'A1-A12,B1-B12,C1-B12,D1-D12,E1-E12,F1-F12,G1-G12,H1-H12,I1-I12,J1-J12');
INSERT INTO MOVIE_CINEMAS (cinema_name, total_seats, cinema_type, seat_layout) VALUES ('4관', 200, 'IMAX', 'A1-A20,B1-B20,C1-C20,D1-D20,E1-E20,F1-F20,G1-G20,H1-H20,I1-I20,J1-J20');
INSERT INTO MOVIE_CINEMAS (cinema_name, total_seats, cinema_type, seat_layout) VALUES ('5관', 90, '4DX', 'A1-A9,B1-B9,C1-C9,D1-D9,E1-E9,F1-F9,G1-G9,H1-H9,I1-I9,J1-J9');
INSERT INTO MOVIE_CINEMAS (cinema_name, total_seats, cinema_type, seat_layout) VALUES ('6관', 160, '일반', 'A1-A16,B1-B16,C1-C16,D1-D16,E1-E16,F1-F16,G1-G16,H1-H16,I1-I16,J1-J16');

-- 상영 시간표 더미 데이터 (모두 2025년 7월 16일)
INSERT INTO MOVIE_SHOWTIMES (movie_id, cinema_id, show_date, start_time, end_time, available_seats, price, status) VALUES (1, 1, DATE '2025-07-16', TO_DATE('2025-07-16 09:00', 'YYYY-MM-DD HH24:MI'), TO_DATE('2025-07-16 11:12', 'YYYY-MM-DD HH24:MI'), 180, 12000, 'AVAILABLE');
INSERT INTO MOVIE_SHOWTIMES (movie_id, cinema_id, show_date, start_time, end_time, available_seats, price, status) VALUES (1, 2, DATE '2025-07-16', TO_DATE('2025-07-16 13:30', 'YYYY-MM-DD HH24:MI'), TO_DATE('2025-07-16 15:42', 'YYYY-MM-DD HH24:MI'), 150, 12000, 'AVAILABLE');
INSERT INTO MOVIE_SHOWTIMES (movie_id, cinema_id, show_date, start_time, end_time, available_seats, price, status) VALUES (1, 3, DATE '2025-07-16', TO_DATE('2025-07-16 18:00', 'YYYY-MM-DD HH24:MI'), TO_DATE('2025-07-16 20:12', 'YYYY-MM-DD HH24:MI'), 120, 15000, 'AVAILABLE');
INSERT INTO MOVIE_SHOWTIMES (movie_id, cinema_id, show_date, start_time, end_time, available_seats, price, status) VALUES (2, 1, DATE '2025-07-16', TO_DATE('2025-07-16 11:30', 'YYYY-MM-DD HH24:MI'), TO_DATE('2025-07-16 13:48', 'YYYY-MM-DD HH24:MI'), 180, 11000, 'AVAILABLE');
INSERT INTO MOVIE_SHOWTIMES (movie_id, cinema_id, show_date, start_time, end_time, available_seats, price, status) VALUES (2, 4, DATE '2025-07-16', TO_DATE('2025-07-16 16:00', 'YYYY-MM-DD HH24:MI'), TO_DATE('2025-07-16 18:18', 'YYYY-MM-DD HH24:MI'), 200, 18000, 'AVAILABLE');
INSERT INTO MOVIE_SHOWTIMES (movie_id, cinema_id, show_date, start_time, end_time, available_seats, price, status) VALUES (3, 2, DATE '2025-07-16', TO_DATE('2025-07-16 10:00', 'YYYY-MM-DD HH24:MI'), TO_DATE('2025-07-16 11:51', 'YYYY-MM-DD HH24:MI'), 150, 12000, 'AVAILABLE');
INSERT INTO MOVIE_SHOWTIMES (movie_id, cinema_id, show_date, start_time, end_time, available_seats, price, status) VALUES (3, 5, DATE '2025-07-16', TO_DATE('2025-07-16 14:30', 'YYYY-MM-DD HH24:MI'), TO_DATE('2025-07-16 16:21', 'YYYY-MM-DD HH24:MI'), 90, 25000, 'AVAILABLE');
INSERT INTO MOVIE_SHOWTIMES (movie_id, cinema_id, show_date, start_time, end_time, available_seats, price, status) VALUES (3, 6, DATE '2025-07-16', TO_DATE('2025-07-16 19:30', 'YYYY-MM-DD HH24:MI'), TO_DATE('2025-07-16 21:21', 'YYYY-MM-DD HH24:MI'), 160, 13000, 'AVAILABLE');
INSERT INTO MOVIE_SHOWTIMES (movie_id, cinema_id, show_date, start_time, end_time, available_seats, price, status) VALUES (4, 4, DATE '2025-07-16', TO_DATE('2025-07-16 10:30', 'YYYY-MM-DD HH24:MI'), TO_DATE('2025-07-16 12:28', 'YYYY-MM-DD HH24:MI'), 200, 18000, 'AVAILABLE');
INSERT INTO MOVIE_SHOWTIMES (movie_id, cinema_id, show_date, start_time, end_time, available_seats, price, status) VALUES (4, 1, DATE '2025-07-16', TO_DATE('2025-07-16 15:00', 'YYYY-MM-DD HH24:MI'), TO_DATE('2025-07-16 16:58', 'YYYY-MM-DD HH24:MI'), 180, 12000, 'AVAILABLE');
INSERT INTO MOVIE_SHOWTIMES (movie_id, cinema_id, show_date, start_time, end_time, available_seats, price, status) VALUES (4, 6, DATE '2025-07-16', TO_DATE('2025-07-16 21:30', 'YYYY-MM-DD HH24:MI'), TO_DATE('2025-07-16 23:28', 'YYYY-MM-DD HH24:MI'), 160, 13000, 'AVAILABLE');
INSERT INTO MOVIE_SHOWTIMES (movie_id, cinema_id, show_date, start_time, end_time, available_seats, price, status) VALUES (5, 3, DATE '2025-07-16', TO_DATE('2025-07-16 12:00', 'YYYY-MM-DD HH24:MI'), TO_DATE('2025-07-16 14:25', 'YYYY-MM-DD HH24:MI'), 120, 15000, 'AVAILABLE');
INSERT INTO MOVIE_SHOWTIMES (movie_id, cinema_id, show_date, start_time, end_time, available_seats, price, status) VALUES (5, 2, DATE '2025-07-16', TO_DATE('2025-07-16 20:00', 'YYYY-MM-DD HH24:MI'), TO_DATE('2025-07-16 22:25', 'YYYY-MM-DD HH24:MI'), 150, 12000, 'AVAILABLE');
INSERT INTO MOVIE_SHOWTIMES (movie_id, cinema_id, show_date, start_time, end_time, available_seats, price, status) VALUES (6, 1, DATE '2025-07-16', TO_DATE('2025-07-16 21:00', 'YYYY-MM-DD HH24:MI'), TO_DATE('2025-07-16 23:00', 'YYYY-MM-DD HH24:MI'), 180, 12000, 'AVAILABLE');
INSERT INTO MOVIE_SHOWTIMES (movie_id, cinema_id, show_date, start_time, end_time, available_seats, price, status) VALUES (6, 3, DATE '2025-07-16', TO_DATE('2025-07-16 16:30', 'YYYY-MM-DD HH24:MI'), TO_DATE('2025-07-16 18:30', 'YYYY-MM-DD HH24:MI'), 120, 15000, 'AVAILABLE');
INSERT INTO MOVIE_SHOWTIMES (movie_id, cinema_id, show_date, start_time, end_time, available_seats, price, status) VALUES (7, 5, DATE '2025-07-16', TO_DATE('2025-07-16 11:00', 'YYYY-MM-DD HH24:MI'), TO_DATE('2025-07-16 12:43', 'YYYY-MM-DD HH24:MI'), 90, 25000, 'AVAILABLE');
INSERT INTO MOVIE_SHOWTIMES (movie_id, cinema_id, show_date, start_time, end_time, available_seats, price, status) VALUES (7, 6, DATE '2025-07-16', TO_DATE('2025-07-16 17:00', 'YYYY-MM-DD HH24:MI'), TO_DATE('2025-07-16 18:43', 'YYYY-MM-DD HH24:MI'), 160, 13000, 'AVAILABLE');
INSERT INTO MOVIE_SHOWTIMES (movie_id, cinema_id, show_date, start_time, end_time, available_seats, price, status) VALUES (8, 4, DATE '2025-07-16', TO_DATE('2025-07-16 13:00', 'YYYY-MM-DD HH24:MI'), TO_DATE('2025-07-16 15:03', 'YYYY-MM-DD HH24:MI'), 200, 18000, 'AVAILABLE');
INSERT INTO MOVIE_SHOWTIMES (movie_id, cinema_id, show_date, start_time, end_time, available_seats, price, status) VALUES (8, 2, DATE '2025-07-16', TO_DATE('2025-07-16 17:30', 'YYYY-MM-DD HH24:MI'), TO_DATE('2025-07-16 19:33', 'YYYY-MM-DD HH24:MI'), 150, 12000, 'AVAILABLE');
INSERT INTO MOVIE_SHOWTIMES (movie_id, cinema_id, show_date, start_time, end_time, available_seats, price, status) VALUES (9, 3, DATE '2025-07-16', TO_DATE('2025-07-16 14:00', 'YYYY-MM-DD HH24:MI'), TO_DATE('2025-07-16 15:59', 'YYYY-MM-DD HH24:MI'), 120, 15000, 'AVAILABLE');
INSERT INTO MOVIE_SHOWTIMES (movie_id, cinema_id, show_date, start_time, end_time, available_seats, price, status) VALUES (9, 1, DATE '2025-07-16', TO_DATE('2025-07-16 19:00', 'YYYY-MM-DD HH24:MI'), TO_DATE('2025-07-16 20:59', 'YYYY-MM-DD HH24:MI'), 180, 12000, 'AVAILABLE');
INSERT INTO MOVIE_SHOWTIMES (movie_id, cinema_id, show_date, start_time, end_time, available_seats, price, status) VALUES (10, 6, DATE '2025-07-16', TO_DATE('2025-07-16 15:30', 'YYYY-MM-DD HH24:MI'), TO_DATE('2025-07-16 17:43', 'YYYY-MM-DD HH24:MI'), 160, 13000, 'AVAILABLE');
INSERT INTO MOVIE_SHOWTIMES (movie_id, cinema_id, show_date, start_time, end_time, available_seats, price, status) VALUES (10, 4, DATE '2025-07-16', TO_DATE('2025-07-16 20:30', 'YYYY-MM-DD HH24:MI'), TO_DATE('2025-07-16 22:43', 'YYYY-MM-DD HH24:MI'), 200, 18000, 'AVAILABLE');

-- 조회용 SELECT 문들
SELECT * FROM MOVIE_USERS;
SELECT * FROM MOVIE_MOVIES;
SELECT * FROM MOVIE_CINEMAS;
SELECT * FROM MOVIE_SHOWTIMES;
SELECT * FROM MOVIE_RESERVATIONS;

--UPDATE MOVIE_MOVIES SET RATING_AGE = '15세 이상 관람가' WHERE MOVIE_ID = 1;
--UPDATE MOVIE_MOVIES SET RATING_AGE = '15세 이상 관람가' WHERE MOVIE_ID = 2;
--UPDATE MOVIE_MOVIES SET RATING_AGE = '15세 이상 관람가' WHERE MOVIE_ID = 3;
--UPDATE MOVIE_MOVIES SET RATING_AGE = '15세 이상 관람가' WHERE MOVIE_ID = 4;
--UPDATE MOVIE_MOVIES SET RATING_AGE = '청소년 관람불가' WHERE MOVIE_ID = 5;
--UPDATE MOVIE_MOVIES SET RATING_AGE = '청소년 관람불가' WHERE MOVIE_ID = 6;
--UPDATE MOVIE_MOVIES SET RATING_AGE = '12세 이상 관람가' WHERE MOVIE_ID = 7;
--UPDATE MOVIE_MOVIES SET RATING_AGE = '15세 이상 관람가' WHERE MOVIE_ID = 8;
--UPDATE MOVIE_MOVIES SET RATING_AGE = '15세 이상 관람가' WHERE MOVIE_ID = 9;
--UPDATE MOVIE_MOVIES SET RATING_AGE = '청소년 관람불가' WHERE MOVIE_ID = 10;

-- 영화 더미 데이터
INSERT INTO MOVIE_MOVIES (title, poster_image_url, genre, duration) VALUES ('기생충', 'https://image.tmdb.org/t/p/w500/7IiTTgloJzvGI1TAYymCfbfl3vT.jpg', '드라마', 132);
INSERT INTO MOVIE_MOVIES (title, poster_image_url, genre, duration) VALUES ('벌새', 'https://upload.wikimedia.org/wikipedia/ko/c/c8/%EB%B2%8C%EC%83%88_%ED%8F%AC%EC%8A%A4%ED%84%B0.jpg', '드라마', 138);
INSERT INTO MOVIE_MOVIES (title, poster_image_url, genre, duration) VALUES ('극한직업', 'https://web-cf-image.cjenm.com/crop/660x950/public/share/metamng/programs/extremejob-movie-poster-ko-001-01.jpg_1645638949085.jpg?v=1679468009', '코미디', 111);
INSERT INTO MOVIE_MOVIES (title, poster_image_url, genre, duration) VALUES ('부산행', 'https://i.namu.wiki/i/8lfVxCkzXgnK5_xfX8RnT8L_a1IlcFHeshO2corroAW49TAtljTkXqBztCV6Fbmm2bUmgFtLNmLcAV0B9reVBA.webp', '액션', 118);
INSERT INTO MOVIE_MOVIES (title, poster_image_url, genre, duration) VALUES ('아가씨', 'https://i.namu.wiki/i/ReWOyx652-CFKDqrYZXA4BxhHLkstYtEl-lu9HloYOmN9WJA4K1FxOdcvH-yYgaMAEKDYVkjbHkwks5W7KaDOw.webp', '드라마', 145);
INSERT INTO MOVIE_MOVIES (title, poster_image_url, genre, duration) VALUES ('올드보이', 'https://upload.wikimedia.org/wikipedia/ko/b/b5/%EC%98%AC%EB%93%9C%EB%B3%B4%EC%9D%B4_%ED%8F%AC%EC%8A%A4%ED%84%B0.jpg', '스릴러', 120);
INSERT INTO MOVIE_MOVIES (title, poster_image_url, genre, duration) VALUES ('엑시트', 'https://theviewers.co.kr/Files/30/Images/201906/37340_33635_1750.jpg', '액션', 103);
INSERT INTO MOVIE_MOVIES (title, poster_image_url, genre, duration) VALUES ('베테랑', 'https://i.namu.wiki/i/YHFxNLmOCJsLZ9vWDEjFGW90LgxsMXvcNXgxpOVo9jJrheXMXkhRPahBwCRshqhng2NBfJDOEOfGC29Ypz-YkA.webp', '액션', 123);
INSERT INTO MOVIE_MOVIES (title, poster_image_url, genre, duration) VALUES ('하이파이브', 'https://i.namu.wiki/i/PPiVbtDFxLl4h9g_wJYdNJmiNA2owiz4WjEQlBYBWfr-9Wia_eFycSgqfbMDwQDWjfOQ_fsv1T-F0DGDw-7Rag.webp', '드라마', 119);
INSERT INTO MOVIE_MOVIES (title, poster_image_url, genre, duration) VALUES ('범죄와의 전쟁', 'https://i.namu.wiki/i/ws6yJDqL_JxkiomsfeRGft690tM-QH_tB2CJCEgoXi6t9X0BdjMC94aIAJk48SPPYZHj7uxeYVp83pZfSFdYCw.webp', '범죄', 133);

-- 상영관 더미 데이터
INSERT INTO MOVIE_CINEMAS (cinema_name, total_seats, cinema_type, seat_layout) VALUES ('1관', 180, '일반', 'A1-A15,B1-B15,C1-C15,D1-D15,E1-E15,F1-F15,G1-G15,H1-H15,I1-I15,J1-J15,K1-K15,L1-L15');
INSERT INTO MOVIE_CINEMAS (cinema_name, total_seats, cinema_type, seat_layout) VALUES ('2관', 150, '일반', 'A1-A15,B1-B15,C1-C15,D1-D15,E1-E15,F1-F15,G1-G15,H1-H15,I1-I15,J1-J15');
INSERT INTO MOVIE_CINEMAS (cinema_name, total_seats, cinema_type, seat_layout) VALUES ('3관', 120, 'VIP', 'A1-A12,B1-B12,C1-B12,D1-D12,E1-E12,F1-F12,G1-G12,H1-H12,I1-I12,J1-J12');
INSERT INTO MOVIE_CINEMAS (cinema_name, total_seats, cinema_type, seat_layout) VALUES ('4관', 200, 'IMAX', 'A1-A20,B1-B20,C1-C20,D1-D20,E1-E20,F1-F20,G1-G20,H1-H20,I1-I20,J1-J20');
INSERT INTO MOVIE_CINEMAS (cinema_name, total_seats, cinema_type, seat_layout) VALUES ('5관', 90, '4DX', 'A1-A9,B1-B9,C1-C9,D1-D9,E1-E9,F1-F9,G1-G9,H1-H9,I1-I9,J1-J9');
INSERT INTO MOVIE_CINEMAS (cinema_name, total_seats, cinema_type, seat_layout) VALUES ('6관', 160, '일반', 'A1-A16,B1-B16,C1-C16,D1-D16,E1-E16,F1-F16,G1-G16,H1-H16,I1-I16,J1-J16');

-- 상영 시간표 더미 데이터 (모두 2025년 7월 16일)
INSERT INTO MOVIE_SHOWTIMES (movie_id, cinema_id, show_date, start_time, end_time, available_seats, price, status) VALUES (1, 1, DATE '2025-07-16', TO_DATE('2025-07-16 09:00', 'YYYY-MM-DD HH24:MI'), TO_DATE('2025-07-16 11:12', 'YYYY-MM-DD HH24:MI'), 180, 12000, 'AVAILABLE');
INSERT INTO MOVIE_SHOWTIMES (movie_id, cinema_id, show_date, start_time, end_time, available_seats, price, status) VALUES (1, 2, DATE '2025-07-16', TO_DATE('2025-07-16 13:30', 'YYYY-MM-DD HH24:MI'), TO_DATE('2025-07-16 15:42', 'YYYY-MM-DD HH24:MI'), 150, 12000, 'AVAILABLE');
INSERT INTO MOVIE_SHOWTIMES (movie_id, cinema_id, show_date, start_time, end_time, available_seats, price, status) VALUES (1, 3, DATE '2025-07-16', TO_DATE('2025-07-16 18:00', 'YYYY-MM-DD HH24:MI'), TO_DATE('2025-07-16 20:12', 'YYYY-MM-DD HH24:MI'), 120, 15000, 'AVAILABLE');
INSERT INTO MOVIE_SHOWTIMES (movie_id, cinema_id, show_date, start_time, end_time, available_seats, price, status) VALUES (2, 1, DATE '2025-07-16', TO_DATE('2025-07-16 11:30', 'YYYY-MM-DD HH24:MI'), TO_DATE('2025-07-16 13:48', 'YYYY-MM-DD HH24:MI'), 180, 11000, 'AVAILABLE');
INSERT INTO MOVIE_SHOWTIMES (movie_id, cinema_id, show_date, start_time, end_time, available_seats, price, status) VALUES (2, 4, DATE '2025-07-16', TO_DATE('2025-07-16 16:00', 'YYYY-MM-DD HH24:MI'), TO_DATE('2025-07-16 18:18', 'YYYY-MM-DD HH24:MI'), 200, 18000, 'AVAILABLE');
INSERT INTO MOVIE_SHOWTIMES (movie_id, cinema_id, show_date, start_time, end_time, available_seats, price, status) VALUES (3, 2, DATE '2025-07-16', TO_DATE('2025-07-16 10:00', 'YYYY-MM-DD HH24:MI'), TO_DATE('2025-07-16 11:51', 'YYYY-MM-DD HH24:MI'), 150, 12000, 'AVAILABLE');
INSERT INTO MOVIE_SHOWTIMES (movie_id, cinema_id, show_date, start_time, end_time, available_seats, price, status) VALUES (3, 5, DATE '2025-07-16', TO_DATE('2025-07-16 14:30', 'YYYY-MM-DD HH24:MI'), TO_DATE('2025-07-16 16:21', 'YYYY-MM-DD HH24:MI'), 90, 25000, 'AVAILABLE');
INSERT INTO MOVIE_SHOWTIMES (movie_id, cinema_id, show_date, start_time, end_time, available_seats, price, status) VALUES (3, 6, DATE '2025-07-16', TO_DATE('2025-07-16 19:30', 'YYYY-MM-DD HH24:MI'), TO_DATE('2025-07-16 21:21', 'YYYY-MM-DD HH24:MI'), 160, 13000, 'AVAILABLE');
INSERT INTO MOVIE_SHOWTIMES (movie_id, cinema_id, show_date, start_time, end_time, available_seats, price, status) VALUES (4, 4, DATE '2025-07-16', TO_DATE('2025-07-16 10:30', 'YYYY-MM-DD HH24:MI'), TO_DATE('2025-07-16 12:28', 'YYYY-MM-DD HH24:MI'), 200, 18000, 'AVAILABLE');
INSERT INTO MOVIE_SHOWTIMES (movie_id, cinema_id, show_date, start_time, end_time, available_seats, price, status) VALUES (4, 1, DATE '2025-07-16', TO_DATE('2025-07-16 15:00', 'YYYY-MM-DD HH24:MI'), TO_DATE('2025-07-16 16:58', 'YYYY-MM-DD HH24:MI'), 180, 12000, 'AVAILABLE');
INSERT INTO MOVIE_SHOWTIMES (movie_id, cinema_id, show_date, start_time, end_time, available_seats, price, status) VALUES (4, 6, DATE '2025-07-16', TO_DATE('2025-07-16 21:30', 'YYYY-MM-DD HH24:MI'), TO_DATE('2025-07-16 23:28', 'YYYY-MM-DD HH24:MI'), 160, 13000, 'AVAILABLE');
INSERT INTO MOVIE_SHOWTIMES (movie_id, cinema_id, show_date, start_time, end_time, available_seats, price, status) VALUES (5, 3, DATE '2025-07-16', TO_DATE('2025-07-16 12:00', 'YYYY-MM-DD HH24:MI'), TO_DATE('2025-07-16 14:25', 'YYYY-MM-DD HH24:MI'), 120, 15000, 'AVAILABLE');
INSERT INTO MOVIE_SHOWTIMES (movie_id, cinema_id, show_date, start_time, end_time, available_seats, price, status) VALUES (5, 2, DATE '2025-07-16', TO_DATE('2025-07-16 20:00', 'YYYY-MM-DD HH24:MI'), TO_DATE('2025-07-16 22:25', 'YYYY-MM-DD HH24:MI'), 150, 12000, 'AVAILABLE');
INSERT INTO MOVIE_SHOWTIMES (movie_id, cinema_id, show_date, start_time, end_time, available_seats, price, status) VALUES (6, 1, DATE '2025-07-16', TO_DATE('2025-07-16 21:00', 'YYYY-MM-DD HH24:MI'), TO_DATE('2025-07-16 23:00', 'YYYY-MM-DD HH24:MI'), 180, 12000, 'AVAILABLE');
INSERT INTO MOVIE_SHOWTIMES (movie_id, cinema_id, show_date, start_time, end_time, available_seats, price, status) VALUES (6, 3, DATE '2025-07-16', TO_DATE('2025-07-16 16:30', 'YYYY-MM-DD HH24:MI'), TO_DATE('2025-07-16 18:30', 'YYYY-MM-DD HH24:MI'), 120, 15000, 'AVAILABLE');
INSERT INTO MOVIE_SHOWTIMES (movie_id, cinema_id, show_date, start_time, end_time, available_seats, price, status) VALUES (7, 5, DATE '2025-07-16', TO_DATE('2025-07-16 11:00', 'YYYY-MM-DD HH24:MI'), TO_DATE('2025-07-16 12:43', 'YYYY-MM-DD HH24:MI'), 90, 25000, 'AVAILABLE');
INSERT INTO MOVIE_SHOWTIMES (movie_id, cinema_id, show_date, start_time, end_time, available_seats, price, status) VALUES (7, 6, DATE '2025-07-16', TO_DATE('2025-07-16 17:00', 'YYYY-MM-DD HH24:MI'), TO_DATE('2025-07-16 18:43', 'YYYY-MM-DD HH24:MI'), 160, 13000, 'AVAILABLE');
INSERT INTO MOVIE_SHOWTIMES (movie_id, cinema_id, show_date, start_time, end_time, available_seats, price, status) VALUES (8, 4, DATE '2025-07-16', TO_DATE('2025-07-16 13:00', 'YYYY-MM-DD HH24:MI'), TO_DATE('2025-07-16 15:03', 'YYYY-MM-DD HH24:MI'), 200, 18000, 'AVAILABLE');
INSERT INTO MOVIE_SHOWTIMES (movie_id, cinema_id, show_date, start_time, end_time, available_seats, price, status) VALUES (8, 2, DATE '2025-07-16', TO_DATE('2025-07-16 17:30', 'YYYY-MM-DD HH24:MI'), TO_DATE('2025-07-16 19:33', 'YYYY-MM-DD HH24:MI'), 150, 12000, 'AVAILABLE');
INSERT INTO MOVIE_SHOWTIMES (movie_id, cinema_id, show_date, start_time, end_time, available_seats, price, status) VALUES (9, 3, DATE '2025-07-16', TO_DATE('2025-07-16 14:00', 'YYYY-MM-DD HH24:MI'), TO_DATE('2025-07-16 15:59', 'YYYY-MM-DD HH24:MI'), 120, 15000, 'AVAILABLE');
INSERT INTO MOVIE_SHOWTIMES (movie_id, cinema_id, show_date, start_time, end_time, available_seats, price, status) VALUES (9, 1, DATE '2025-07-16', TO_DATE('2025-07-16 19:00', 'YYYY-MM-DD HH24:MI'), TO_DATE('2025-07-16 20:59', 'YYYY-MM-DD HH24:MI'), 180, 12000, 'AVAILABLE');
INSERT INTO MOVIE_SHOWTIMES (movie_id, cinema_id, show_date, start_time, end_time, available_seats, price, status) VALUES (10, 6, DATE '2025-07-16', TO_DATE('2025-07-16 15:30', 'YYYY-MM-DD HH24:MI'), TO_DATE('2025-07-16 17:43', 'YYYY-MM-DD HH24:MI'), 160, 13000, 'AVAILABLE');
INSERT INTO MOVIE_SHOWTIMES (movie_id, cinema_id, show_date, start_time, end_time, available_seats, price, status) VALUES (10, 4, DATE '2025-07-16', TO_DATE('2025-07-16 20:30', 'YYYY-MM-DD HH24:MI'), TO_DATE('2025-07-16 22:43', 'YYYY-MM-DD HH24:MI'), 200, 18000, 'AVAILABLE');

-- 조회용 SELECT 문들
SELECT * FROM MOVIE_USERS;
SELECT * FROM MOVIE_MOVIES;
SELECT * FROM MOVIE_CINEMAS;
SELECT * FROM MOVIE_SHOWTIMES;
SELECT * FROM MOVIE_RESERVATIONS;

=======
>>>>>>> ecc10f5bb117c90c7f28ae08c42d94fc5d9c738c
--DROP TABLE MOVIE_USERS CASCADE CONSTRAINT;
--DROP TABLE MOVIE_MOVIES CASCADE CONSTRAINT;
--DROP TABLE MOVIE_CINEMAS CASCADE CONSTRAINT;
--DROP TABLE MOVIE_SHOWTIMES CASCADE CONSTRAINT;
--DROP TABLE MOVIE_RESERVATIONS CASCADE CONSTRAINT;

SELECT DISTINCT
    m.movie_id,
    m.title,
    m.poster_image_url,
    m.genre,
    m.rating_age
FROM MOVIE_MOVIES m
JOIN MOVIE_SHOWTIMES s ON m.movie_id = s.movie_id
WHERE s.status = 'AVAILABLE'
ORDER BY m.title ASC;

SELECT 
    m.movie_id,                                           -- 영화 PK값
    m.title AS movie_title,                               -- 영화 이름
    m.poster_image_url,                                   -- 영화 포스터
    m.rating_age,                                         -- 관람 연령
    s.showtime_id,                                        -- 상영시간표 ID (예매시 필요)
    TO_CHAR(s.start_time, 'YYYY-MM-DD HH24:MI') AS start_time, -- 영화 시작 시간
    s.available_seats,                                    -- 남은 좌석 수
    c.cinema_name,                                        -- 상영관 이름 (추가 정보)
    c.cinema_type,                                        -- 상영관 타입 (추가 정보)
    s.price,                                              -- 티켓 가격 (추가 정보)
    m.genre,                                              -- 장르 (추가 정보)
    m.duration,                                           -- 상영 시간 (추가 정보)
    c.seat_layout 
FROM MOVIE_MOVIES m
JOIN MOVIE_SHOWTIMES s ON m.movie_id = s.movie_id
JOIN MOVIE_CINEMAS c ON s.cinema_id = c.cinema_id
WHERE s.status = 'AVAILABLE'                             -- 예매 가능한 상영만
    AND s.available_seats > 0                            -- 좌석이 남아있는 상영만
    AND s.show_date >= TRUNC(SYSDATE)                    -- 오늘 이후 상영만
ORDER BY s.start_time ASC;

SELECT m.movie_id, m.title, m.poster_image_url, m.genre, m.duration, m.rating_age,
    s.showtime_id, s.cinema_id, c.cinema_name, c.cinema_type,
    TO_CHAR(s.start_time, 'YYYY-MM-DD HH24:MI') AS start_time,
    TO_CHAR(s.end_time, 'YYYY-MM-DD HH24:MI') AS end_time,
    s.available_seats, s.price, s.status 
FROM MOVIE_MOVIES m
LEFT JOIN MOVIE_SHOWTIMES s ON m.movie_id = s.movie_id
LEFT JOIN MOVIE_CINEMAS c ON s.cinema_id = c.cinema_id
ORDER BY m.movie_id, s.start_time;

-- 1. 영화 목록 조회
SELECT movie_id, title, poster_image_url, genre, duration
FROM MOVIE_MOVIES
ORDER BY title;

-- 2. 특정 날짜의 상영 시간표 조회 (영화명, 상영관, 시간 포함, 날짜는 무조건 7월 16일로 고정함)
SELECT 
    s.showtime_id,
    m.title AS movie_title,
    c.cinema_name,
    c.cinema_type,
    TO_CHAR(s.start_time, 'HH24:MI') AS start_time,
    TO_CHAR(s.end_time, 'HH24:MI') AS end_time,
    s.available_seats,
    s.price,
    s.status,
    TO_CHAR(s.show_date, 'YYYY-MM-DD') AS show_date, 
    m.rating_age 
FROM MOVIE_SHOWTIMES s
JOIN MOVIE_MOVIES m ON s.movie_id = m.movie_id
JOIN MOVIE_CINEMAS c ON s.cinema_id = c.cinema_id
ORDER BY m.title, s.start_time ASC;

-- 3. 특정 영화의 상영 시간표 조회
SELECT 
    s.showtime_id,
    c.cinema_name,
    c.cinema_type,
    TO_CHAR(s.start_time, 'YYYY-MM-DD HH24:MI') AS start_datetime,
    s.available_seats,
    s.price,
    s.status
FROM MOVIE_SHOWTIMES s
JOIN MOVIE_CINEMAS c ON s.cinema_id = c.cinema_id
WHERE s.movie_id = 1  -- 기생충
  AND s.show_date = DATE '2025-07-16'
ORDER BY s.start_time;

-- 4. 장르별 영화 검색
SELECT movie_id, title, poster_image_url, duration
FROM MOVIE_MOVIES
WHERE genre = '드라마'
ORDER BY title;

-- 5. 상영관별 좌석 정보 조회
SELECT 
    cinema_id,
    cinema_name,
    cinema_type,
    total_seats,
    seat_layout
FROM MOVIE_CINEMAS
ORDER BY cinema_name;

-- 6. 예매 가능한 상영 시간표 조회 (좌석이 남아있는 것만)
SELECT 
    s.showtime_id,
    m.title,
    c.cinema_name,
    TO_CHAR(s.start_time, 'YYYY-MM-DD HH24:MI') AS start_datetime,
    s.available_seats,
    s.price
FROM MOVIE_SHOWTIMES s
JOIN MOVIE_MOVIES m ON s.movie_id = m.movie_id
JOIN MOVIE_CINEMAS c ON s.cinema_id = c.cinema_id
WHERE s.available_seats > 0 
  AND s.status = 'AVAILABLE'
  AND s.show_date = DATE '2025-07-16'
ORDER BY m.title, s.start_time;

-- 7. 특정 사용자의 예매 내역 조회
SELECT 
    r.reservation_id,
    r.reservation_code,
    m.title AS movie_title,
    c.cinema_name,
    TO_CHAR(s.start_time, 'YYYY-MM-DD HH24:MI') AS showtime,
    r.reserved_seats,
    r.total_amount,
    r.reservation_status,
    TO_CHAR(r.reservation_date, 'YYYY-MM-DD HH24:MI:SS') AS reservation_datetime
FROM MOVIE_RESERVATIONS r
JOIN MOVIE_SHOWTIMES s ON r.showtime_id = s.showtime_id
JOIN MOVIE_MOVIES m ON s.movie_id = m.movie_id
JOIN MOVIE_CINEMAS c ON s.cinema_id = c.cinema_id
WHERE r.user_id = 1  -- 특정 사용자 ID
ORDER BY r.reservation_date DESC;

-- 8. 인기 영화 순위 (예매 건수 기준) 
-- 주의: 현재 예매 데이터가 없으므로 실제 데이터 입력 후 사용
SELECT 
    m.title,
    COUNT(r.reservation_id) AS reservation_count,
    SUM(r.total_amount) AS total_revenue
FROM MOVIE_MOVIES m
LEFT JOIN MOVIE_SHOWTIMES s ON m.movie_id = s.movie_id
LEFT JOIN MOVIE_RESERVATIONS r ON s.showtime_id = r.showtime_id
WHERE r.reservation_status = 'CONFIRMED'
GROUP BY m.movie_id, m.title
ORDER BY reservation_count DESC;

-- 9. 상영관별 매출 현황
-- 주의: 현재 예매 데이터가 없으므로 실제 데이터 입력 후 사용
SELECT 
    c.cinema_name,
    c.cinema_type,
    COUNT(r.reservation_id) AS total_reservations,
    SUM(r.total_amount) AS total_revenue,
    AVG(r.total_amount) AS avg_ticket_price
FROM MOVIE_CINEMAS c
LEFT JOIN MOVIE_SHOWTIMES s ON c.cinema_id = s.cinema_id
LEFT JOIN MOVIE_RESERVATIONS r ON s.showtime_id = r.showtime_id
WHERE r.reservation_status = 'CONFIRMED'
GROUP BY c.cinema_id, c.cinema_name, c.cinema_type
ORDER BY total_revenue DESC;

>>>>>>> ecc10f5bb117c90c7f28ae08c42d94fc5d9c738c
-- 10. 특정 시간대별 상영 현황 (오전/오후/저녁)
SELECT 
    CASE 
        WHEN EXTRACT(HOUR FROM s.start_time) BETWEEN 6 AND 11 THEN '오전'
        WHEN EXTRACT(HOUR FROM s.start_time) BETWEEN 12 AND 17 THEN '오후'
        WHEN EXTRACT(HOUR FROM s.start_time) BETWEEN 18 AND 23 THEN '저녁'
        ELSE '심야'
    END AS time_period,
    COUNT(*) AS showtime_count,
    AVG(s.price) AS avg_price
FROM MOVIE_SHOWTIMES s
WHERE s.show_date = DATE '2025-07-16'
GROUP BY 
    CASE 
        WHEN EXTRACT(HOUR FROM s.start_time) BETWEEN 6 AND 11 THEN '오전'
        WHEN EXTRACT(HOUR FROM s.start_time) BETWEEN 12 AND 17 THEN '오후'
        WHEN EXTRACT(HOUR FROM s.start_time) BETWEEN 18 AND 23 THEN '저녁'
        ELSE '심야'
    END
ORDER BY 
    CASE 
        CASE 
            WHEN EXTRACT(HOUR FROM s.start_time) BETWEEN 6 AND 11 THEN '오전'
            WHEN EXTRACT(HOUR FROM s.start_time) BETWEEN 12 AND 17 THEN '오후'
            WHEN EXTRACT(HOUR FROM s.start_time) BETWEEN 18 AND 23 THEN '저녁'
            ELSE '심야'
        END
        WHEN '오전' THEN 1
        WHEN '오후' THEN 2
        WHEN '저녁' THEN 3
        ELSE 4
    END;

-- 11. 사용자 로그인용 쿼리
SELECT user_id, name, email, phone
FROM MOVIE_USERS
WHERE phone = '010-1234-5678'  -- 입력받은 휴대폰 번호
  AND password = 'hashed_password';  -- 암호화된 비밀번호와 비교

-- 12. 예매 시 좌석 수 업데이트 (트랜잭션 처리 필요)
UPDATE MOVIE_SHOWTIMES 
SET available_seats = available_seats - 2  -- 예매한 좌석 수만큼 차감
WHERE showtime_id = 1;

-- 13. 예매 취소 시 좌석 수 복구
UPDATE MOVIE_SHOWTIMES 
SET available_seats = available_seats + 2  -- 취소한 좌석 수만큼 증가
WHERE showtime_id = 1;

-- 14. 매진된 상영 시간표 상태 업데이트
UPDATE MOVIE_SHOWTIMES 
SET status = 'SOLD_OUT'
WHERE available_seats = 0;

-- 15. 예매 코드로 예매 정보 조회
SELECT 
    r.reservation_code,
    u.name AS customer_name,
    u.phone,
    m.title AS movie_title,
    c.cinema_name,
    TO_CHAR(s.start_time, 'YYYY-MM-DD HH24:MI') AS start_time,
    r.reserved_seats,
    r.total_amount,
    r.reservation_status,
    r.reservation_movie_poster_url 
FROM MOVIE_RESERVATIONS r
JOIN MOVIE_USERS u ON r.user_id = u.user_id
JOIN MOVIE_SHOWTIMES s ON r.showtime_id = s.showtime_id
JOIN MOVIE_MOVIES m ON s.movie_id = m.movie_id
JOIN MOVIE_CINEMAS c ON s.cinema_id = c.cinema_id
WHERE r.reservation_code = '0614-2099-5266-853';  -- 예매 코드

SELECT r.reserved_seats FROM MOVIE_RESERVATIONS r
JOIN MOVIE_SHOWTIMES s ON r.showtime_id = s.showtime_id
WHERE r.showtime_id = 1 
    AND r.reservation_status = 'CONFIRMED';

select reservation_code from movie_reservations;

----------------------------

SELECT 
    r.reservation_code,
    u.name AS customer_name,
    u.phone,
    m.title AS movie_title,
    c.cinema_name,
    TO_CHAR(s.start_time, 'YYYY-MM-DD HH24:MI') AS start_time,
    r.reserved_seats,
    r.total_amount,
    r.reservation_status,
    r.reservation_movie_poster_url 
FROM MOVIE_RESERVATIONS r
JOIN MOVIE_USERS u ON r.user_id = u.user_id
JOIN MOVIE_SHOWTIMES s ON r.showtime_id = s.showtime_id
JOIN MOVIE_MOVIES m ON s.movie_id = m.movie_id
JOIN MOVIE_CINEMAS c ON s.cinema_id = c.cinema_id;

-- 일별 매출 조회
SELECT TRUNC(payment_date) AS pay_date,
       SUM(total_amount) AS revenue,
       COUNT(*) AS bookings
FROM MOVIE_RESERVATIONS
WHERE payment_date >= SYSDATE - 1
GROUP BY TRUNC(payment_date)
ORDER BY TRUNC(payment_date);

-- 인기 영화 순위
SELECT m.title,
       COUNT(r.reservation_id) AS bookings,
       SUM(r.total_amount) AS revenue
FROM MOVIE_MOVIES m
JOIN MOVIE_SHOWTIMES s ON m.movie_id = s.movie_id
JOIN MOVIE_RESERVATIONS r ON s.showtime_id = r.showtime_id
GROUP BY m.movie_id, m.title
ORDER BY bookings DESC
FETCH FIRST 5 ROWS ONLY;

-- 상영관 이용률
SELECT c.cinema_name,
       c.total_seats,
       ROUND(AVG((c.total_seats - s.available_seats) * 100.0 / c.total_seats), 2) AS utilization
FROM MOVIE_CINEMAS c
JOIN MOVIE_SHOWTIMES s ON c.cinema_id = s.cinema_id
GROUP BY c.cinema_id, c.cinema_name, c.total_seats;
=======
WHERE r.reservation_code = 'RES001';  -- 예매 코드

-- 16. 일별 매출 통계 (현재 예매 데이터가 없으므로 실제 데이터 입력 후 사용)
SELECT 
    TO_CHAR(r.payment_date, 'YYYY-MM-DD') AS payment_date,
    COUNT(r.reservation_id) AS daily_reservations,
    SUM(r.total_amount) AS daily_revenue
FROM MOVIE_RESERVATIONS r
WHERE r.reservation_status = 'CONFIRMED'
  AND r.payment_date >= DATE '2025-07-01'
  AND r.payment_date < DATE '2025-08-01'
GROUP BY TO_CHAR(r.payment_date, 'YYYY-MM-DD')
ORDER BY payment_date;

-- 17. VIP/특별관 상영 시간표 조회
SELECT 
    s.showtime_id,
    m.title,
    c.cinema_name,
    c.cinema_type,
    TO_CHAR(s.start_time, 'HH24:MI') AS start_time,
    s.available_seats,
    s.price
FROM MOVIE_SHOWTIMES s
JOIN MOVIE_MOVIES m ON s.movie_id = m.movie_id
JOIN MOVIE_CINEMAS c ON s.cinema_id = c.cinema_id
WHERE c.cinema_type IN ('VIP', 'IMAX', '4DX')
  AND s.show_date = DATE '2025-07-16'
ORDER BY c.cinema_type, s.start_time;

-- 18. 특정 가격대 상영 시간표 조회
SELECT 
    m.title,
    c.cinema_name,
    TO_CHAR(s.start_time, 'HH24:MI') AS start_time,
    s.price
FROM MOVIE_SHOWTIMES s
JOIN MOVIE_MOVIES m ON s.movie_id = m.movie_id
JOIN MOVIE_CINEMAS c ON s.cinema_id = c.cinema_id
WHERE s.price BETWEEN 10000 AND 15000  -- 1만원~1만5천원
  AND s.show_date = DATE '2025-07-16'
ORDER BY s.price, s.start_time;
>>>>>>> ecc10f5bb117c90c7f28ae08c42d94fc5d9c738c
